name: Sync GitHub Secrets to AWS Secrets Manager

on:
  workflow_dispatch:
    inputs:
      secret_names:
        description: 'Comma-separated list of GitHub secret names to sync (e.g., DB_PASSWORD,API_KEY)'
        required: true
        type: string


jobs:
  make-matrix:
    runs-on: ubuntu-latest
    outputs:
      secret_matrix: ${{ steps.set-matrix.outputs.secret_matrix }}
    steps:
      - id: set-matrix
        run: |
          # Parse user input into a JSON array for matrix strategy
          IFS=',' read -ra secrets <<< "${{ github.event.inputs.secret_names }}"
          arr_json="["
          for secret in "${secrets[@]}"; do
            s=$(echo "$secret" | xargs) # trim whitespace
            arr_json="$arr_json\"$s\","
          done
          arr_json="${arr_json%,}" # remove trailing comma
          arr_json="$arr_json]"
          echo "secret_matrix=$arr_json" >> $GITHUB_OUTPUT

  sync_secret:
    needs: make-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        secret_name: ${{ fromJson(needs.make-matrix.outputs.secret_matrix) }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  

      - name: Sync secret to AWS Secrets Manager
        env:
          SECRET_VALUE: ${{ secrets[ matrix.secret_name ] }}
          AWS_SECRET_ID: ${{ github.event.inputs.aws_secret_prefix }}${{ matrix.secret_name }}
        run: |
          if [ -z "$SECRET_VALUE" ] || [ "$SECRET_VALUE" == "***" ]; then
            echo "::warning:: Secret '${{ matrix.secret_name }}' not found or not accessible. Skipping."
            exit 0
          fi
      
          echo "Syncing '${{ matrix.secret_name }}' to AWS Secrets Manager as '$AWS_SECRET_ID'..."
      
          if aws secretsmanager describe-secret --secret-id "$AWS_SECRET_ID" > /dev/null 2>&1; then
            # If secret exists, update it
            aws secretsmanager put-secret-value --secret-id "$AWS_SECRET_ID" --secret-string "$SECRET_VALUE"
          else
            # Create secret if it does not exist
            aws secretsmanager create-secret --name "$AWS_SECRET_ID" --secret-string "$SECRET_VALUE"
          fi
